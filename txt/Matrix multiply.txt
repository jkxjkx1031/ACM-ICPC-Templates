struct MAT
{
    int v[SZ][SZ];
    int sz;
    MAT()
    {
        memset(v,0,sizeof(v));
    }
    MAT(int s,int k)
    {
        sz=s;
        int i;
        if(k==0) memset(v,0,sizeof(v));
        else if(k==1)
        {
            memset(v,0,sizeof(v));
            for(i=0;i<sz;i++) v[i][i]=1;
        }
    }
    MAT operator*(const MAT &rhs) const
    {
        int i,j,k;
        MAT tmp(sz,0);
        for(i=0;i<sz;i++)
            for(j=0;j<sz;j++)
                for(k=0;k<sz;k++)
                    tmp.v[i][j]+=v[i][k]*rhs.v[k][j];
        return tmp;
    }
    MAT operator^(int e) const
    {
        int i;
        MAT tmp(sz,1);
        for(i=1;i<=e;i++)
            tmp=tmp*(*this);
        return tmp;
    }
};

/*To multiply a matrix by a vector, first make the vector into a square matrix!*/

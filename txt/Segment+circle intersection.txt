// Include struct V (2D vector).

int inters(V p,V q,V o,double r,V *res)
{
    double dx=q.x-p.x,dy=q.y-p.y;
    double a=sqr(dx)+sqr(dy),b=2*dx*(p.x-o.x)+2*dy*(p.y-o.y),c=sqr(p.x-o.x)+sqr(p.y-o.y)-sqr(r);
    double delta=sqr(b)-4*a*c;
    int cnt=0;
    if(delta>EPS)
    {
        double t1=(-b+sqrt(delta))/a/2,t2=(-b-sqrt(delta))/a/2;
        if(t1>-EPS && t1<1+EPS)     ////
            res[++cnt]=V{p.x+t1*dx,p.y+t1*dy};
        if(t2>-EPS && t2<1+EPS)     ////
            res[++cnt]=V{p.x+t2*dx,p.y+t2*dy};
        return cnt;
    }
    else if(delta>-EPS)     // delta=0
    {
        double t=-b/a/2;
        if(t>-EPS && t<1+EPS)       // To find line+circle intersections, delete the 3 'if's.
            res[++cnt]=V{p.x+t*dx,p.y+t*dy};
        return cnt;
    }
    else return 0;
}

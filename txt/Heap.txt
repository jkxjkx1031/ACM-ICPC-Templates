struct HEAPNODE
{
    int val,idx;
};

void up(int u)
{
    if(u>1 && heap[u].val>heap[u/2].val)
    {
        std::swap(heap[u],heap[u/2]);
        up(u/2);
    }
}

void down(int u)
{
    if(u*2>h) return;
    int v=u*2;
    if(v+1<=h && heap[v+1].val>heap[v].val) v++;
    if(heap[v].val>heap[u].val)
    {
        std::swap(heap[u],heap[v]);
        down(v);
    }
}

void push(int val,int idx)
{
    h++;
    heap[h].val=val;  heap[h].idx=idx;
    up(h);
}

HEAPNODE pop()
{
    HEAPNODE res=heap[1];
    std::swap(heap[1],heap[h--]);
    down(1);
    return res;
}
